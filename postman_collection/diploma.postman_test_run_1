{
	"id": "7707f801-3d7b-4f33-89cb-a2b7688724e5",
	"name": "diploma",
	"timestamp": "2025-10-05T11:28:05.415Z",
	"collection_id": "39773696-d4515af7-5417-4fd1-82f3-457654a4dbd2",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 125,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-10-05T11:27:43.846Z",
	"totalFail": 97,
	"results": [
		{
			"id": "50814daa-cd78-45f8-b73b-dd20163db2c2",
			"name": "create_first_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 176,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				176
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "6718ba37-8365-4030-a39d-65edebacfd05",
			"name": "create_second_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 110,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				110
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "b356abc9-5572-48d7-8c21-5015e0592082",
			"name": "create_third_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 112,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				112
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "ab37e7ad-cd3e-4259-9e19-ae3ccdc19a44",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 186,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				186
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "b0df3971-aef3-4bc0-a69f-2e669a7a4c9c",
			"name": "get_token_for_second_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 143,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				143
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "f06330d8-72b8-408c-b65e-0679a0612601",
			"name": "user_registration_without_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 25,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "80067122-66fe-4746-b54f-071c60cca739",
			"name": "user_registration_without_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "64b0f6cb-1a10-4fb3-9022-ae3e8c94f5cb",
			"name": "user_registration_without_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 104,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				104
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "0a6da870-12c5-499a-bf3f-34f91a8e6800",
			"name": "user_registration_without_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 102,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				102
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "6ef6f3bf-916a-4614-ba02-8d1245c8f016",
			"name": "user_registration_without_password",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 15,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "1dd9b14c-54a8-4b45-a180-05e8764d830c",
			"name": "user_registration_too_long_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 25,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "dcf84c52-579e-4faa-9dc7-50f28e45111f",
			"name": "user_registration_too_long_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 21,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b4373092-5dc9-4390-a8cc-36fbbdf9c572",
			"name": "user_registration_too_long_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 20,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5aa78963-90cb-4bd0-8ae2-1df4996acf43",
			"name": "user_registration_too_long_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 16,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bddb0f55-09ba-415a-8ee4-8a105bdecdd2",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 29,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				29
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "079c1d63-9a0d-4f19-8895-b9ab5f61602a",
			"name": "user_registration_email_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 25,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "57ee9f82-4944-4b48-9785-f562316c9f5d",
			"name": "user_registration_username_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 21,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6e536405-4d94-4d23-9859-29dd23ab6c1d",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 87,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				87
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c01fa925-ea1d-491e-beb2-4af8c896a07d",
			"name": "get_token_no_email",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 38,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "379dce45-e1b1-4b0a-bf13-79aa971a54f1",
			"name": "get_token_no_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ed9e64c1-dde5-4ad4-afc7-55db0beb08c6",
			"name": "logout // User",
			"url": "http://127.0.0.1:8000/api/auth/token/logout/",
			"time": 47,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				47
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d39ea67f-2985-4bbb-ad60-8c5a90658d97",
			"name": "get_token",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 141,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				141
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "35b05150-81f0-466d-8200-9e244774eeb4",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 28,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "375d4542-7369-4220-b91e-d4fc6aea2bb1",
			"name": "get_user_list// User",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "27397664-cdd2-4cc9-9cf4-de72e61e6629",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/?limit=1",
			"time": 34,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "f143121a-c49f-44a2-ae26-910697139566",
			"name": "get_profile // No Auth",
			"url": "http://127.0.0.1:8000/api/users/{{userId}}/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a4f00b2c-2979-447f-b6a3-c7d23914ddbe",
			"name": "get_profile // User",
			"url": "http://127.0.0.1:8000/api/users/{{userId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "9c1c574d-e228-4406-bab2-240933da10a3",
			"name": "users_me // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 24,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "3bab2d1f-2b04-4826-b1ea-726aae5895a4",
			"name": "set_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 1503,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				1503
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "c79d2044-9535-4778-a119-b7702a9cf119",
			"name": "check_avatar_is_set // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 18,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно содержать ссылку на аватар": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно содержать ссылку на аватар": true
				}
			]
		},
		{
			"id": "30b4c809-b5f8-41e0-b89d-2bc1bde2212b",
			"name": "reset_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 174,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				174
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d6fdada3-21ef-43cb-8717-4a66ec4754b7",
			"name": "get_token_with_new_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 105,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				105
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "26068e66-c8fe-4ab6-bd20-cb771847b136",
			"name": "roll_back_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 192,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				192
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d1002baa-05e7-4bff-8f2d-0f127c94f377",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 98,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				98
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "6a1f676a-4bfa-46c2-b3ce-bb6f7b958a87",
			"name": "users_me // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 6,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "60840f1f-14cb-4011-b05a-ebfb654bd9ca",
			"name": "get_non_existing_profile // User",
			"url": "http://127.0.0.1:8000/api/users/9876/",
			"time": 15,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "6f81fb75-0d55-4783-a78e-ff030ac66c1d",
			"name": "reset_password_wrong_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 80,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				80
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d9b03444-779b-4861-a5ae-efb15a23d898",
			"name": "delete_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "d0baf3c6-4188-41db-82e5-165e247d0b3d",
			"name": "set_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "a001b357-2c16-41af-8823-b761816af1db",
			"name": "set_avatar_empty_body // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "506da394-3eb6-47f3-bf3e-bd8b92d452bb",
			"name": "delete_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 50,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				50
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "bd12ea92-a544-48e2-a9e2-f195334e97e6",
			"name": "check_avatar_is_deleted // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 26,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно быть пустым": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно быть пустым": true
				}
			]
		},
		{
			"id": "f167ac3e-8edd-4f01-8e80-3af436a8c851",
			"name": "get_tag_list // No Auth",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 19,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "77aaf56a-ef09-4fd0-bfd3-32d2cd9ad022",
			"name": "get_tag_list // User",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 40,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				40
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "ceb87af8-f3c8-4179-9493-bf4a785d7aba",
			"name": "get_tag_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/tags/{{firstTagId}}/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a1a9a37d-7eed-4c83-b20b-5b1c6ecb4bcc",
			"name": "get_tag_detail // User",
			"url": "http://127.0.0.1:8000/api/tags/{{firstTagId}}/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a216a19a-f85e-4c75-a6dd-abfc90f885ec",
			"name": "get_non_existing_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/9876/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "f1ebd218-bdcf-41ba-ae92-a6634ee7ffd2",
			"name": "create_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/",
			"time": 25,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "43fe8988-05ea-4347-afe4-3ef18f6d79ee",
			"name": "put_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/{{firstTagId}}/",
			"time": 24,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "2521a0fa-cc25-4389-8291-0bf92329344e",
			"name": "patch_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/{{firstTagId}}/",
			"time": 19,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "111ce337-0ba2-400b-9636-cd0acfac4988",
			"name": "delete_tag // User",
			"url": "http://127.0.0.1:8000/api/tags/{{firstTagId}}/",
			"time": 16,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "0b002f79-b46d-40bc-8905-b8c5896553de",
			"name": "get_ingredients_list // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 30,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "964e1d9b-4c8a-4af6-8491-b2351b706aef",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 38,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "900b3668-af85-4724-a106-92adc68d2b4f",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://127.0.0.1:8000/api/ingredients/?name={{ingredientNameFirstLatter}}",
			"time": 34,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				34
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": false
				}
			]
		},
		{
			"id": "894d3eaf-8474-4c02-a8ba-c7217383012e",
			"name": "get_ingredient // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/{{firstIndredientId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "538e3c98-fcf1-470f-92d1-bd3374dd83c5",
			"name": "get_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/{{firstIndredientId}}/",
			"time": 26,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "2165f22f-9ce5-428c-85f8-fef6b2e923d2",
			"name": "get_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/9876/",
			"time": 25,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "ece2cc38-ba0a-4cbb-b915-78ae9e26a89a",
			"name": "create_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 17,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "c6fafb71-63a0-4c3d-bc5c-798a72266c94",
			"name": "put_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/{{firstIndredientId}}/",
			"time": 18,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "7a1c405e-748d-44bf-9047-3055500c8d7b",
			"name": "patch_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/{{firstIndredientId}}/",
			"time": 19,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "58eaa92d-111d-44f7-9d6d-da386ae20b47",
			"name": "delete_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/{{firstIndredientId}}/",
			"time": 22,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "10702d17-0942-4e13-83c4-4b099fc4ab0c",
			"name": "create_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 30,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "a1238e3a-3584-484c-8588-d32e04d03f23",
			"name": "create_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "2e1b5e4d-d03c-4730-9028-22590b34faca",
			"name": "create_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 16,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "083780ce-1724-478b-b31a-1206e89e6a33",
			"name": "create_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 21,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "b24985ee-0612-4aed-a9e8-6fb349be8e9f",
			"name": "create_fifth_recipe // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "aa9ca44e-8eee-4efa-990e-7c4d28dfc6cb",
			"name": "get_recipes_list // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "33dae7f1-2343-48c4-8762-9118fd72ae8e",
			"name": "get_recipes_list // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 24,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "36541a3f-ace2-4b54-9dba-4c976f0ad638",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?limit=2",
			"time": 26,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "f7d3f7d1-c43c-4e1c-9958-1dc5852ce4b4",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?author={{userId}}",
			"time": 887,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				887
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "8ff1b762-5b18-4d6b-9d19-b2203c9fa0a4",
			"name": "get_recipes_list_with_two_tags_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?tags={{secondTagSlug}}&tags={{thirdTagSlug}}",
			"time": 18,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `tags`": false
				}
			]
		},
		{
			"id": "7a6db526-c38f-4ad3-887c-38c42255ebff",
			"name": "get_recipe_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "6e60faaa-e13b-48b2-8e23-882fc0a0477a",
			"name": "get_recipe_detail // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 7,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "134184cb-f4c6-4710-9c73-69e398be5139",
			"name": "get_recipe_short_link // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 99,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				99
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "c522224d-9379-46ba-8a26-ab692d3dc614",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 31,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				31
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "0fecfc9a-6455-4451-8a79-ea26cfdfcdea",
			"name": "update_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 15,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа соответствует ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа соответствует ожидаемой": false
				}
			]
		},
		{
			"id": "ae230630-0f1c-43a8-bb93-41f04b5bcc62",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 22,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "863397e6-b729-46d7-adeb-b8e51d2f377d",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "185e4a90-e1f6-44f1-a0eb-7a85648d1e52",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 21,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "15f4b78f-b9f0-4e80-9211-909793809d2a",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f9c05588-b229-4c6b-b47d-382a60e0c257",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 20,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e9e64814-a04d-46ec-9469-5c0b1fd7c572",
			"name": "create_recipe_without_tags_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e2d0012f-07c9-441e-b869-3ca36502b143",
			"name": "create_recipe_empty_tags // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8f9f826c-59d8-40e6-bc17-8e461d61f26c",
			"name": "create_recipe_with_repetitive_tags // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "14852573-752b-4f6d-bb54-f1fc157136b2",
			"name": "create_recipe_with_non_existing_tag // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "c2c3f58b-522d-42dc-9bd6-693bf45bb24f",
			"name": "create_recipe_without_image_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "3f499105-3eae-46d8-afd9-b513daa75918",
			"name": "create_recipe_empty_image // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 18,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6ead4eac-d517-4051-8001-fcb2d6b7eaa3",
			"name": "create_recipe_without_name_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 23,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "da754ced-008a-4013-9ed9-7c752041525d",
			"name": "create_recipe_empty_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 20,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "47b3a0ca-c2c0-4834-9774-eb59e7384682",
			"name": "create_recipe_too_long_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "d6585e3a-aba0-4250-b644-fa69824fdbd7",
			"name": "create_recipe_without_text_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "bebafadd-5b0e-41d1-bedd-01a299e40580",
			"name": "create_recipe_empty_text // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "34ff9e42-b03c-4491-840b-42b2370b4d46",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 17,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "66ed5ceb-de1b-4ea5-8a7f-59119d204d7f",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 19,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9766a535-a809-4d0b-832e-dcec46daa410",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 25,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "29d7404b-2374-479e-b269-52a3c8768106",
			"name": "create_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "24fe6fe1-5d93-4431-a0ba-8f01bde7e824",
			"name": "update_recipe_not_author // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "54379635-bca6-4fa7-8d78-e060cf54be44",
			"name": "update_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "7339aa1f-c69f-4ad1-8e65-6b82ee3911e6",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "5e9848b9-aee5-4f04-8882-9161c8e82415",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "ac9f141b-fb82-455d-b851-e843a27f183d",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "6f9839d2-6b08-4b84-8223-d1da4d57feb7",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 22,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "1b088c47-8e78-486c-83d3-8906adac46c3",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "7bb9003b-5695-4a53-b8f5-56f901f421c1",
			"name": "update_recipe_without_tags_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "1ceaa05a-5aa3-4bb8-ba90-994a6733ca6a",
			"name": "update_recipe_empty_tags // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 22,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "035a4bde-a476-4c29-90ee-c01cc02a4667",
			"name": "update_recipe_with_non_existing_tag // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "ae5fd5d0-f53e-4d01-b27e-64cf3bc9484c",
			"name": "update_recipe_repetitive_tags  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "29747c8b-10db-4779-8df2-6d8fddef0077",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a281eaa3-e76c-4864-b4a5-828b5cdb176f",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 21,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "900eb05a-4a64-4256-9062-cb2d411fc0f3",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "a6c1d2a2-78ec-4a6a-aeee-adb3a28bdd88",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 21,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "5cfc0018-7c5f-41f3-98a2-bccf5e4c1b86",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "09320618-d3b9-4c25-81e2-c974ea44d17a",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "93e5d71c-b8e1-480c-b2f5-3e404d4f00e4",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "7f860c49-f7b1-496e-bde3-14721230e915",
			"name": "create_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "bd258785-d80f-432b-a60a-0dc49e9662cc",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/{{secondUserId}}/subscribe/?recipes_limit=2",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
				}
			]
		},
		{
			"id": "fe4090d5-6d7e-4895-8a68-8f3ce8e3f1eb",
			"name": "get_subscription_list // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/",
			"time": 21,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "33e009e9-efe7-450c-b9f1-baf1114a29ac",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?limit=1",
			"time": 22,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
				}
			]
		},
		{
			"id": "65404675-8bae-4534-8e09-9c5e30d62446",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?recipes_limit=2",
			"time": 26,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "c66d922a-ad60-428d-95f7-eebab90ca3e6",
			"name": "create_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b805ad9f-ad2d-46d2-a871-8a3ffed29527",
			"name": "create_duplicated_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "24e4f3ac-3b7b-4b01-a597-d3bf9d789069",
			"name": "create_self_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/{{userId}}/subscribe/",
			"time": 15,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				15
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "e35ca9cc-1d76-4949-be65-9fba2990436a",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 30,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "c91597e7-888c-4f27-9f7d-4a7757a1b971",
			"name": "add_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "c99ed9c8-823a-412a-ad1f-352191e6741b",
			"name": "download_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/download_shopping_cart/",
			"time": 24,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true
				}
			]
		},
		{
			"id": "1217ad7f-81e5-48be-a111-12871fb44d01",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "18846383-5472-467e-8abb-114bd8a80127",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 21,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2ff95fdc-42c1-4e78-8612-23647894ce25",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 21,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "05542378-3141-4fce-bb83-eaa8cdabbe2f",
			"name": "add_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "88592a0d-6906-4af4-84da-38f89b95971a",
			"name": "add_to_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 17,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "a0985647-a8ec-4e91-9cfc-0d69e0ef4aba",
			"name": "add_again_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 48,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				48
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f03f8732-66fd-421c-84eb-f394f009be76",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "2572cbc0-8da4-48f0-b0d0-a6438255e8cd",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 22,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "413f49f6-10d1-466a-963f-38dc5bfd2126",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 14,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "eba15ecc-a7e8-4269-9661-62ed94e488cd",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 22,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				22
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "df804e3c-2e9f-4302-89c3-38070b6f20a1",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 35,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				35
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "d75de198-5b49-4c52-a032-8c09c9e41b95",
			"name": "delete_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 8,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "3f5923f8-2f32-4989-8b2d-227442c47e23",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 14,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				14
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "be315ff2-a218-423e-9fcf-442b6f692509",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "3f80453b-1fe8-456f-9dd1-7614bde9598f",
			"name": "delete_first_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/{{thirdUserId}}/subscribe/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "42a2160b-bd3c-4744-9a21-86cd9891afa0",
			"name": "delete_second_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/{{secondUserId}}/subscribe/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "65ce37ea-91a5-4d91-a72c-5ce08b7ed39e",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "80b621d3-bbed-47fa-8cfd-9bfc901ff408",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 17,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "b6d71dc7-cb3f-483d-beb9-820fe676564b",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "25b61d4b-5dc1-4e12-9cca-5881c8fa1872",
			"name": "remove_from_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "5fbb1969-5602-41ee-9c0e-750a9c8597ad",
			"name": "remove_from_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "0ed23f32-298a-44bf-9cd0-ddf3f976d076",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "dd0f0c68-16da-49a3-b46e-0f0ac6c44cd3",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 23,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "7e9b3365-204d-499e-acc8-17d09ca3dd2d",
			"name": "remove_from_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 21,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				21
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "33d64296-ffb1-428d-8287-1b72177c38e5",
			"name": "delete_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 401": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": false
				}
			]
		},
		{
			"id": "33649be6-60a7-4dc0-952a-6acf47f94d3d",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "c16f203e-de87-46e2-82d6-af478e16b8dc",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "0245c9a1-9c72-45fe-b947-5526b6977592",
			"name": "delete_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 18,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				18
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "c3e5262a-ac03-470b-9a51-16c3ffade44e",
			"name": "delete_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 24,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "e6c163a3-0442-47b5-9ec4-947d337a2c36",
			"name": "delete_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{thirdRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "1b3eb68c-e33b-4836-8beb-2f656dc403be",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fourthRecipeId}}/",
			"time": 20,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				20
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "ec27aad4-c5bd-4596-95a1-023a10e92745",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 19,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 7108,
	"collection": {
		"requests": [
			{
				"id": "50814daa-cd78-45f8-b73b-dd20163db2c2",
				"method": "POST"
			},
			{
				"id": "6718ba37-8365-4030-a39d-65edebacfd05",
				"method": "POST"
			},
			{
				"id": "b356abc9-5572-48d7-8c21-5015e0592082",
				"method": "POST"
			},
			{
				"id": "ab37e7ad-cd3e-4259-9e19-ae3ccdc19a44",
				"method": "POST"
			},
			{
				"id": "b0df3971-aef3-4bc0-a69f-2e669a7a4c9c",
				"method": "POST"
			},
			{
				"id": "f06330d8-72b8-408c-b65e-0679a0612601",
				"method": "POST"
			},
			{
				"id": "80067122-66fe-4746-b54f-071c60cca739",
				"method": "POST"
			},
			{
				"id": "64b0f6cb-1a10-4fb3-9022-ae3e8c94f5cb",
				"method": "POST"
			},
			{
				"id": "0a6da870-12c5-499a-bf3f-34f91a8e6800",
				"method": "POST"
			},
			{
				"id": "6ef6f3bf-916a-4614-ba02-8d1245c8f016",
				"method": "POST"
			},
			{
				"id": "1dd9b14c-54a8-4b45-a180-05e8764d830c",
				"method": "POST"
			},
			{
				"id": "dcf84c52-579e-4faa-9dc7-50f28e45111f",
				"method": "POST"
			},
			{
				"id": "b4373092-5dc9-4390-a8cc-36fbbdf9c572",
				"method": "POST"
			},
			{
				"id": "5aa78963-90cb-4bd0-8ae2-1df4996acf43",
				"method": "POST"
			},
			{
				"id": "bddb0f55-09ba-415a-8ee4-8a105bdecdd2",
				"method": "POST"
			},
			{
				"id": "079c1d63-9a0d-4f19-8895-b9ab5f61602a",
				"method": "POST"
			},
			{
				"id": "57ee9f82-4944-4b48-9785-f562316c9f5d",
				"method": "POST"
			},
			{
				"id": "6e536405-4d94-4d23-9859-29dd23ab6c1d",
				"method": "POST"
			},
			{
				"id": "c01fa925-ea1d-491e-beb2-4af8c896a07d",
				"method": "POST"
			},
			{
				"id": "379dce45-e1b1-4b0a-bf13-79aa971a54f1",
				"method": "POST"
			},
			{
				"id": "ed9e64c1-dde5-4ad4-afc7-55db0beb08c6",
				"method": "POST"
			},
			{
				"id": "d39ea67f-2985-4bbb-ad60-8c5a90658d97",
				"method": "POST"
			},
			{
				"id": "35b05150-81f0-466d-8200-9e244774eeb4",
				"method": "GET"
			},
			{
				"id": "375d4542-7369-4220-b91e-d4fc6aea2bb1",
				"method": "GET"
			},
			{
				"id": "27397664-cdd2-4cc9-9cf4-de72e61e6629",
				"method": "GET"
			},
			{
				"id": "f143121a-c49f-44a2-ae26-910697139566",
				"method": "GET"
			},
			{
				"id": "a4f00b2c-2979-447f-b6a3-c7d23914ddbe",
				"method": "GET"
			},
			{
				"id": "9c1c574d-e228-4406-bab2-240933da10a3",
				"method": "GET"
			},
			{
				"id": "3bab2d1f-2b04-4826-b1ea-726aae5895a4",
				"method": "PUT"
			},
			{
				"id": "c79d2044-9535-4778-a119-b7702a9cf119",
				"method": "GET"
			},
			{
				"id": "30b4c809-b5f8-41e0-b89d-2bc1bde2212b",
				"method": "POST"
			},
			{
				"id": "d6fdada3-21ef-43cb-8717-4a66ec4754b7",
				"method": "POST"
			},
			{
				"id": "26068e66-c8fe-4ab6-bd20-cb771847b136",
				"method": "POST"
			},
			{
				"id": "d1002baa-05e7-4bff-8f2d-0f127c94f377",
				"method": "POST"
			},
			{
				"id": "6a1f676a-4bfa-46c2-b3ce-bb6f7b958a87",
				"method": "GET"
			},
			{
				"id": "60840f1f-14cb-4011-b05a-ebfb654bd9ca",
				"method": "GET"
			},
			{
				"id": "6f81fb75-0d55-4783-a78e-ff030ac66c1d",
				"method": "POST"
			},
			{
				"id": "d9b03444-779b-4861-a5ae-efb15a23d898",
				"method": "DELETE"
			},
			{
				"id": "d0baf3c6-4188-41db-82e5-165e247d0b3d",
				"method": "PUT"
			},
			{
				"id": "a001b357-2c16-41af-8823-b761816af1db",
				"method": "PUT"
			},
			{
				"id": "506da394-3eb6-47f3-bf3e-bd8b92d452bb",
				"method": "DELETE"
			},
			{
				"id": "bd12ea92-a544-48e2-a9e2-f195334e97e6",
				"method": "GET"
			},
			{
				"id": "f167ac3e-8edd-4f01-8e80-3af436a8c851",
				"method": "GET"
			},
			{
				"id": "77aaf56a-ef09-4fd0-bfd3-32d2cd9ad022",
				"method": "GET"
			},
			{
				"id": "ceb87af8-f3c8-4179-9493-bf4a785d7aba",
				"method": "GET"
			},
			{
				"id": "a1a9a37d-7eed-4c83-b20b-5b1c6ecb4bcc",
				"method": "GET"
			},
			{
				"id": "a216a19a-f85e-4c75-a6dd-abfc90f885ec",
				"method": "GET"
			},
			{
				"id": "f1ebd218-bdcf-41ba-ae92-a6634ee7ffd2",
				"method": "POST"
			},
			{
				"id": "43fe8988-05ea-4347-afe4-3ef18f6d79ee",
				"method": "PUT"
			},
			{
				"id": "2521a0fa-cc25-4389-8291-0bf92329344e",
				"method": "PATCH"
			},
			{
				"id": "111ce337-0ba2-400b-9636-cd0acfac4988",
				"method": "DELETE"
			},
			{
				"id": "0b002f79-b46d-40bc-8905-b8c5896553de",
				"method": "GET"
			},
			{
				"id": "964e1d9b-4c8a-4af6-8491-b2351b706aef",
				"method": "GET"
			},
			{
				"id": "900b3668-af85-4724-a106-92adc68d2b4f",
				"method": "GET"
			},
			{
				"id": "894d3eaf-8474-4c02-a8ba-c7217383012e",
				"method": "GET"
			},
			{
				"id": "538e3c98-fcf1-470f-92d1-bd3374dd83c5",
				"method": "GET"
			},
			{
				"id": "2165f22f-9ce5-428c-85f8-fef6b2e923d2",
				"method": "GET"
			},
			{
				"id": "ece2cc38-ba0a-4cbb-b915-78ae9e26a89a",
				"method": "POST"
			},
			{
				"id": "c6fafb71-63a0-4c3d-bc5c-798a72266c94",
				"method": "PUT"
			},
			{
				"id": "7a1c405e-748d-44bf-9047-3055500c8d7b",
				"method": "PATCH"
			},
			{
				"id": "58eaa92d-111d-44f7-9d6d-da386ae20b47",
				"method": "DELETE"
			},
			{
				"id": "10702d17-0942-4e13-83c4-4b099fc4ab0c",
				"method": "POST"
			},
			{
				"id": "a1238e3a-3584-484c-8588-d32e04d03f23",
				"method": "POST"
			},
			{
				"id": "2e1b5e4d-d03c-4730-9028-22590b34faca",
				"method": "POST"
			},
			{
				"id": "083780ce-1724-478b-b31a-1206e89e6a33",
				"method": "POST"
			},
			{
				"id": "b24985ee-0612-4aed-a9e8-6fb349be8e9f",
				"method": "POST"
			},
			{
				"id": "aa9ca44e-8eee-4efa-990e-7c4d28dfc6cb",
				"method": "GET"
			},
			{
				"id": "33dae7f1-2343-48c4-8762-9118fd72ae8e",
				"method": "GET"
			},
			{
				"id": "36541a3f-ace2-4b54-9dba-4c976f0ad638",
				"method": "GET"
			},
			{
				"id": "f7d3f7d1-c43c-4e1c-9958-1dc5852ce4b4",
				"method": "GET"
			},
			{
				"id": "8ff1b762-5b18-4d6b-9d19-b2203c9fa0a4",
				"method": "GET"
			},
			{
				"id": "7a6db526-c38f-4ad3-887c-38c42255ebff",
				"method": "GET"
			},
			{
				"id": "6e60faaa-e13b-48b2-8e23-882fc0a0477a",
				"method": "GET"
			},
			{
				"id": "134184cb-f4c6-4710-9c73-69e398be5139",
				"method": "GET"
			},
			{
				"id": "c522224d-9379-46ba-8a26-ab692d3dc614",
				"method": "GET"
			},
			{
				"id": "0fecfc9a-6455-4451-8a79-ea26cfdfcdea",
				"method": "PATCH"
			},
			{
				"id": "ae230630-0f1c-43a8-bb93-41f04b5bcc62",
				"method": "POST"
			},
			{
				"id": "863397e6-b729-46d7-adeb-b8e51d2f377d",
				"method": "POST"
			},
			{
				"id": "185e4a90-e1f6-44f1-a0eb-7a85648d1e52",
				"method": "POST"
			},
			{
				"id": "15f4b78f-b9f0-4e80-9211-909793809d2a",
				"method": "POST"
			},
			{
				"id": "f9c05588-b229-4c6b-b47d-382a60e0c257",
				"method": "POST"
			},
			{
				"id": "e9e64814-a04d-46ec-9469-5c0b1fd7c572",
				"method": "POST"
			},
			{
				"id": "e2d0012f-07c9-441e-b869-3ca36502b143",
				"method": "POST"
			},
			{
				"id": "8f9f826c-59d8-40e6-bc17-8e461d61f26c",
				"method": "POST"
			},
			{
				"id": "14852573-752b-4f6d-bb54-f1fc157136b2",
				"method": "POST"
			},
			{
				"id": "c2c3f58b-522d-42dc-9bd6-693bf45bb24f",
				"method": "POST"
			},
			{
				"id": "3f499105-3eae-46d8-afd9-b513daa75918",
				"method": "POST"
			},
			{
				"id": "6ead4eac-d517-4051-8001-fcb2d6b7eaa3",
				"method": "POST"
			},
			{
				"id": "da754ced-008a-4013-9ed9-7c752041525d",
				"method": "POST"
			},
			{
				"id": "47b3a0ca-c2c0-4834-9774-eb59e7384682",
				"method": "POST"
			},
			{
				"id": "d6585e3a-aba0-4250-b644-fa69824fdbd7",
				"method": "POST"
			},
			{
				"id": "bebafadd-5b0e-41d1-bedd-01a299e40580",
				"method": "POST"
			},
			{
				"id": "34ff9e42-b03c-4491-840b-42b2370b4d46",
				"method": "POST"
			},
			{
				"id": "66ed5ceb-de1b-4ea5-8a7f-59119d204d7f",
				"method": "POST"
			},
			{
				"id": "9766a535-a809-4d0b-832e-dcec46daa410",
				"method": "POST"
			},
			{
				"id": "29d7404b-2374-479e-b269-52a3c8768106",
				"method": "POST"
			},
			{
				"id": "24fe6fe1-5d93-4431-a0ba-8f01bde7e824",
				"method": "PATCH"
			},
			{
				"id": "54379635-bca6-4fa7-8d78-e060cf54be44",
				"method": "PATCH"
			},
			{
				"id": "7339aa1f-c69f-4ad1-8e65-6b82ee3911e6",
				"method": "PATCH"
			},
			{
				"id": "5e9848b9-aee5-4f04-8882-9161c8e82415",
				"method": "PATCH"
			},
			{
				"id": "ac9f141b-fb82-455d-b851-e843a27f183d",
				"method": "PATCH"
			},
			{
				"id": "6f9839d2-6b08-4b84-8223-d1da4d57feb7",
				"method": "PATCH"
			},
			{
				"id": "1b088c47-8e78-486c-83d3-8906adac46c3",
				"method": "PATCH"
			},
			{
				"id": "7bb9003b-5695-4a53-b8f5-56f901f421c1",
				"method": "PATCH"
			},
			{
				"id": "1ceaa05a-5aa3-4bb8-ba90-994a6733ca6a",
				"method": "PATCH"
			},
			{
				"id": "035a4bde-a476-4c29-90ee-c01cc02a4667",
				"method": "PATCH"
			},
			{
				"id": "ae5fd5d0-f53e-4d01-b27e-64cf3bc9484c",
				"method": "PATCH"
			},
			{
				"id": "29747c8b-10db-4779-8df2-6d8fddef0077",
				"method": "PATCH"
			},
			{
				"id": "a281eaa3-e76c-4864-b4a5-828b5cdb176f",
				"method": "PATCH"
			},
			{
				"id": "900eb05a-4a64-4256-9062-cb2d411fc0f3",
				"method": "PATCH"
			},
			{
				"id": "a6c1d2a2-78ec-4a6a-aeee-adb3a28bdd88",
				"method": "PATCH"
			},
			{
				"id": "5cfc0018-7c5f-41f3-98a2-bccf5e4c1b86",
				"method": "PATCH"
			},
			{
				"id": "09320618-d3b9-4c25-81e2-c974ea44d17a",
				"method": "PATCH"
			},
			{
				"id": "93e5d71c-b8e1-480c-b2f5-3e404d4f00e4",
				"method": "PATCH"
			},
			{
				"id": "7f860c49-f7b1-496e-bde3-14721230e915",
				"method": "POST"
			},
			{
				"id": "bd258785-d80f-432b-a60a-0dc49e9662cc",
				"method": "POST"
			},
			{
				"id": "fe4090d5-6d7e-4895-8a68-8f3ce8e3f1eb",
				"method": "GET"
			},
			{
				"id": "33e009e9-efe7-450c-b9f1-baf1114a29ac",
				"method": "GET"
			},
			{
				"id": "65404675-8bae-4534-8e09-9c5e30d62446",
				"method": "GET"
			},
			{
				"id": "c66d922a-ad60-428d-95f7-eebab90ca3e6",
				"method": "POST"
			},
			{
				"id": "b805ad9f-ad2d-46d2-a871-8a3ffed29527",
				"method": "POST"
			},
			{
				"id": "24e4f3ac-3b7b-4b01-a597-d3bf9d789069",
				"method": "POST"
			},
			{
				"id": "e35ca9cc-1d76-4949-be65-9fba2990436a",
				"method": "POST"
			},
			{
				"id": "c91597e7-888c-4f27-9f7d-4a7757a1b971",
				"method": "POST"
			},
			{
				"id": "c99ed9c8-823a-412a-ad1f-352191e6741b",
				"method": "GET"
			},
			{
				"id": "1217ad7f-81e5-48be-a111-12871fb44d01",
				"method": "POST"
			},
			{
				"id": "18846383-5472-467e-8abb-114bd8a80127",
				"method": "POST"
			},
			{
				"id": "2ff95fdc-42c1-4e78-8612-23647894ce25",
				"method": "POST"
			},
			{
				"id": "05542378-3141-4fce-bb83-eaa8cdabbe2f",
				"method": "POST"
			},
			{
				"id": "88592a0d-6906-4af4-84da-38f89b95971a",
				"method": "POST"
			},
			{
				"id": "a0985647-a8ec-4e91-9cfc-0d69e0ef4aba",
				"method": "POST"
			},
			{
				"id": "f03f8732-66fd-421c-84eb-f394f009be76",
				"method": "POST"
			},
			{
				"id": "2572cbc0-8da4-48f0-b0d0-a6438255e8cd",
				"method": "GET"
			},
			{
				"id": "413f49f6-10d1-466a-963f-38dc5bfd2126",
				"method": "GET"
			},
			{
				"id": "eba15ecc-a7e8-4269-9661-62ed94e488cd",
				"method": "GET"
			},
			{
				"id": "df804e3c-2e9f-4302-89c3-38070b6f20a1",
				"method": "GET"
			},
			{
				"id": "d75de198-5b49-4c52-a032-8c09c9e41b95",
				"method": "DELETE"
			},
			{
				"id": "3f5923f8-2f32-4989-8b2d-227442c47e23",
				"method": "DELETE"
			},
			{
				"id": "be315ff2-a218-423e-9fcf-442b6f692509",
				"method": "DELETE"
			},
			{
				"id": "3f80453b-1fe8-456f-9dd1-7614bde9598f",
				"method": "DELETE"
			},
			{
				"id": "42a2160b-bd3c-4744-9a21-86cd9891afa0",
				"method": "DELETE"
			},
			{
				"id": "65ce37ea-91a5-4d91-a72c-5ce08b7ed39e",
				"method": "DELETE"
			},
			{
				"id": "80b621d3-bbed-47fa-8cfd-9bfc901ff408",
				"method": "DELETE"
			},
			{
				"id": "b6d71dc7-cb3f-483d-beb9-820fe676564b",
				"method": "DELETE"
			},
			{
				"id": "25b61d4b-5dc1-4e12-9cca-5881c8fa1872",
				"method": "DELETE"
			},
			{
				"id": "5fbb1969-5602-41ee-9c0e-750a9c8597ad",
				"method": "DELETE"
			},
			{
				"id": "0ed23f32-298a-44bf-9cd0-ddf3f976d076",
				"method": "DELETE"
			},
			{
				"id": "dd0f0c68-16da-49a3-b46e-0f0ac6c44cd3",
				"method": "DELETE"
			},
			{
				"id": "7e9b3365-204d-499e-acc8-17d09ca3dd2d",
				"method": "DELETE"
			},
			{
				"id": "33d64296-ffb1-428d-8287-1b72177c38e5",
				"method": "DELETE"
			},
			{
				"id": "33649be6-60a7-4dc0-952a-6acf47f94d3d",
				"method": "DELETE"
			},
			{
				"id": "c16f203e-de87-46e2-82d6-af478e16b8dc",
				"method": "DELETE"
			},
			{
				"id": "0245c9a1-9c72-45fe-b947-5526b6977592",
				"method": "DELETE"
			},
			{
				"id": "c3e5262a-ac03-470b-9a51-16c3ffade44e",
				"method": "DELETE"
			},
			{
				"id": "e6c163a3-0442-47b5-9ec4-947d337a2c36",
				"method": "DELETE"
			},
			{
				"id": "1b3eb68c-e33b-4836-8beb-2f656dc403be",
				"method": "DELETE"
			},
			{
				"id": "ec27aad4-c5bd-4596-95a1-023a10e92745",
				"method": "DELETE"
			}
		]
	}
}