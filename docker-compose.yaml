version: "3.9"

volumes:
  pg_data:
  static:
  media:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-foodgram_user} -d ${POSTGRES_DB:-foodgram}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: .env
    command: >
      bash -lc "
          python manage.py migrate &&
          python manage.py collectstatic --noinput &&
          mkdir -p /static &&
          cp -r /app/collected_static/. /static/static/ &&
          python manage.py init_users &&
          python manage.py load_ingredients /app/data/ingredients.json &&
          gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000 --workers 3
        "
    volumes:
      - static:/static
      - media:/app/media
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - static:/static
    command: sh -c "cp -r build/. /static/"
    depends_on:
      - backend
    restart: "no"

  gateway:
    build:
      context: ./infra
      dockerfile: Dockerfile
    volumes:
      - static:/static
      - media:/media
    ports:
      - "8081:80"  # host:container
    depends_on:
      - backend
    restart: always
